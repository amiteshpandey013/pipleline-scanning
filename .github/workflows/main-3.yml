name: Container build, scan and push

on: [push, pull_request]

jobs:
  build-scan-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs: # Define job-level outputs
      push_to_ecr: ${{ steps.check_scan_status.outputs.push_to_ecr }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install required packages
        run: npm install @actions/core

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build my image
        id: build-image
        run: docker build -t my-app:latest .

      - name: Scan image
        id: scan
        uses: sysdiglabs/scan-action@v5
        with:
          sysdig-secure-url: https://app.au1.sysdig.com
          image-tag: my-app:latest
          sysdig-secure-token: ${{ secrets.SECURE_API_TOKEN }}
          skip-summary: true

      - name: Check scan status and control push
        id: check_scan_status
        uses: actions/github-script@v6
        with:
          script: |
            const core = require('@actions/core');
            try {
              console.log("Context:", JSON.stringify(context, null, 2));
              console.log("Steps:", JSON.stringify(steps, null, 2));

              if (steps.scan && steps.scan.outputs && steps.scan.outputs.status === 'success') {
                console.log('Scan passed, proceeding to ECR push');
                core.setOutput('push_to_ecr', 'true');
              } else {
                console.log('Scan failed or status output not found. Build stopped.');
                core.setFailed('Build failed due to scan policy violation');
                core.setOutput('push_to_ecr', 'false');
              }
            } catch (error) {
              console.error("Error in github-script:", error);
              core.setFailed(`JavaScript error: ${error.message}`);
            }

  deploy: # New deploy job
    needs: build-scan-and-push # Depends on the build-scan-and-push job
    runs-on: ubuntu-latest
    if: needs.build-scan-and-push.outputs.push_to_ecr == 'true'
    permissions:
        id-token: write
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::288761737678:role/iam-ecr-full-access
          aws-region: ap-southeast-2

      - name: Push to ECR
        uses: aws-actions/amazon-ecr-push@v2 # Use the official AWS action
        with:
          aws-region: ap-southeast-2
          repository-name: 288761737678.dkr.ecr.ap-southeast-2.amazonaws.com/sysdig
          image-tag: ${{ github.sha }}
